name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Build
      run: go build -o bin/app

    - name: Test
      run: go test -v ./...
    
    - name: Stop service
      run: |
        if systemctl --user list-units | grep -q "cepex"; then
          XDG_RUNTIME_DIR=/run/user/$UID systemctl --user disable cepex.service --now
        fi
    - name: Setup binary
      run: |
        [[ ! -d $HOME/cepex-server/ ]] && mkdir $HOME/cepex-server
        cp ./bin/app $HOME/cepex-server/
    
    - name: Setup unit file
      run: |
        [[ ! -d $HOME/.config/systemd/user/ ]] && mkdir -p $HOME/.config/systemd/user/
        cp ./.systemd/cepex.service $HOME/.config/systemd/user/cepex.service
    - name: Run service
      env:
        PORT: ${{ secrets.PORT }}
        SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
        CAPACITY: ${{ secrets.CAPACITY }}
        S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
        S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
      run: |
        sed -i "s/xPORTx/$PORT/" $HOME/.config/systemd/user/cepex.service
        sed -i "s/xSERVICE_NAMEx/$SERVICE_NAME/" $HOME/.config/systemd/user/cepex.service
        sed -i "s/xCAPACITYx/$CAPACITY/" $HOME/.config/systemd/user/cepex.service
        sed -i "s/xS3_ACCESS_KEYx/$S3_ACCESS_KEY/" $HOME/.config/systemd/user/cepex.service
        sed -i "s/xS3_BUCKETx/$S3_BUCKET/" $HOME/.config/systemd/user/cepex.service
        sed -i "s/xS3_ENDPOINTx/$S3_ENDPOINT/" $HOME/.config/systemd/user/cepex.service
        sed -i "s/xS3_SECRET_KEYx/$S3_SECRET_KEY/" $HOME/.config/systemd/user/cepex.service
        XDG_RUNTIME_DIR=/run/user/$UID systemctl --user enable cepex.service --now
